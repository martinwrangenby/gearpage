name: PR Validation

on: pull_request

jobs:
  component_tests:
    name: Component tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Configure node environment
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Clean install dependencies
        run: npm ci
      - name: Run the component tests
        run: npm test

  e2e_tests:
    name: E2e tests
    env: 
      REACT_APP_DB: ${{ secrets.REACT_APP_DB }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Configure node environment
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Clean install dependencies
        run: npm ci
      - name: Start the app in dev mode and run the e2e tests
        run: npm run e2e:ci
      - name: Upload test artifacts
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: e2e-test-artifacts
          path: e2e/results/
          retention-days: 10

  sonarcloud:
    if: ${{ github.base_ref }}
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Clean install dependencies
        run: npm ci
      - name: Run the component tests (To get coverage report)
        run: npm test -- --coverage --coverageReporters=lcov --coverageReporters=text-summary
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.coverage.exclusions=e2e/**/*
            -Dsonar.qualitygate.wait=true
            -Dsonar.projectKey=martinwrangenby_gearpage
            -Dsonar.organization=martinwrangenby
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  dangerCI:
    if: ${{ github.base_ref }}
    name: DangerCI Analysis
    env:
      DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure node environment
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Clean install dependencies
        run: npm ci
      - name: Danger
        run: npm run danger:ci

  codeQL:
    name: CodeQL Analysis 
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://git.io/codeql-language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    #- run: |
    #   make bootstrap
    #   make release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
